document.addEventListener("DOMContentLoaded", loadTasks);

// Function to load and display tasks
function loadTasks() {
    fetch("../api/task_api.php", {
        method: "GET"
    })
    .then(response => response.json())
    .then(data => {
        if(data.status === "success") {
            displayTasks(data.task);
        } else {
            console.error("Error loading tasks:", data.message);
        }
    })
    .catch(error => console.error("Error loading tasks:", error));
}

// Function to display tasks in the UI
function displayTasks(tasks) {
    const tasksGrid = document.querySelector('.tasks-grid');
    const emptyState = document.querySelector('.empty-state');
    
    if (!tasks || tasks.length === 0) {
        tasksGrid.style.display = 'none';
        emptyState.style.display = 'block';
        return;
    }
    
    tasksGrid.style.display = 'grid';
    emptyState.style.display = 'none';
    tasksGrid.innerHTML = '';
    
    tasks.forEach(task => {
        // Create status badge class based on status
        let statusClass = '';
        switch(task.status.toLowerCase()) {
            case 'pending':
                statusClass = 'status-pending';
                break;
            case 'in progress':
            case 'in-progress':
                statusClass = 'status-progress';
                break;
            case 'completed':
                statusClass = 'status-completed';
                break;
            default:
                statusClass = 'status-pending';
        }
        
        // Format date for display
        const startDate = new Date(task.start_date).toLocaleDateString();
        const endDate = new Date(task.end_date).toLocaleDateString();
        
        tasksGrid.innerHTML += `
            <div class="task-card" onclick="viewTaskDetails(${task.id})">
                <div class="task-header">
                    <div class="task-date">
                        <i class="far fa-calendar-alt"></i> ${startDate} - ${endDate}
                    </div>
                    <h3 class="task-title">${task.task_name}</h3>
                    <span class="status-badge ${statusClass}">${task.status}</span>
                </div>
                <div class="task-body">
                    <p class="task-description">${task.description}</p>
                </div>
                <div class="task-actions">
                    <button class="btn btn-edit" onclick="openEditModal(${task.id}); event.stopPropagation();">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                    <button class="btn btn-delete" onclick="deleteTask(${task.id}); event.stopPropagation();">
                        <i class="fas fa-trash-alt"></i> Delete
                    </button>
                </div>
            </div>
        `;
    });
}

// Function to add a new task
function addTask() {
    const taskName = document.getElementById("task_name").value.trim();
    const startDate = document.getElementById("start_date").value.trim();
    const endDate = document.getElementById("end_date").value.trim();
    const status = document.getElementById("task_status").value.trim();
    const description = document.getElementById("description").value.trim();

    if (!taskName || !startDate || !endDate || !status || !description) {
        alert("All fields are required!");
        return;
    }

    fetch("../api/task_api.php", {
        method: "POST",
        body: JSON.stringify({
            task_name: taskName,
            start_date: startDate,
            end_date: endDate, 
            status: status,
            description: description
        }),
        headers: { "Content-Type": "application/json" }
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message);
        closeAddTaskModal();
        loadTasks();
    })
    .catch(error => console.error("Error adding task:", error));
}

// Function to open the edit modal and populate with task data
function openEditModal(taskId) {
    fetch(`../api/task_api.php?id=${taskId}`, {
        method: "GET"
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === "success") {
            const task = data.task;
            document.getElementById("editId").value = task.id;
            document.getElementById("edit_task_name").value = task.task_name;
            document.getElementById("edit_start_date").value = task.start_date;
            document.getElementById("edit_end_date").value = task.end_date;
            document.getElementById("edit_task_status").value = task.status.toLowerCase();
            document.getElementById("edit_description").value = task.description;
            document.getElementById("editModal").style.display = "block";
        } else {
            alert("Error loading task: " + data.message);
        }
    })
    .catch(error => console.error("Error loading task:", error));
}

// Function to update a task
function updateTask() {
    const id = document.getElementById("editId").value;
    const taskName = document.getElementById("edit_task_name").value.trim();
    const startDate = document.getElementById("edit_start_date").value.trim();
    const endDate = document.getElementById("edit_end_date").value.trim();
    const status = document.getElementById("edit_task_status").value.trim();
    const description = document.getElementById("edit_description").value.trim();

    if (!id || !taskName || !startDate || !endDate || !status || !description) { 
        alert("All fields are required");
        return;
    }

    fetch("../api/task_api.php", {
        method: "PUT",
        body: JSON.stringify({
            id: id,
            task_name: taskName,
            start_date: startDate,
            end_date: endDate, 
            status: status,
            description: description
        }),
        headers: { "Content-Type": "application/json" }
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message);
        closeEditModal();
        loadTasks();
    })
    .catch(error => console.error("Error updating task:", error));
}

// Function to delete a task
function deleteTask(id) {
    if (confirm("Are you sure you want to delete this task?")) {
        fetch(`../api/task_api.php?id=${id}`, {
            method: "DELETE"
        })
        .then(response => response.json())
        .then(data => {
            alert(data.message);
            loadTasks();
        })
        .catch(error => {
            console.error("Error deleting task:", error);
            alert("Failed to delete task");
        });
    }
}

// Function to view task details
function viewTaskDetails(taskId) {
    fetch(`../api/task_api.php?id=${taskId}`, {
        method: "GET"
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === "success") {
            const task = data.task;
            // Implement task details view functionality here
            // For now, we'll just alert the details
            alert(`Task: ${task.task_name}\nDuration: ${task.start_date} to ${task.end_date}\nStatus: ${task.status}\nDescription: ${task.description}`);
        } else {
            alert("Error loading task: " + data.message);
        }
    })
    .catch(error => console.error("Error loading task details:", error));
}

// Modal functions
function openAddTaskModal() {
    // Set default dates
    const today = new Date();
    const formattedDate = today.toISOString().substr(0, 10);
    document.getElementById("start_date").value = formattedDate;
    
    // Set end date to 7 days from today
    const endDate = new Date();
    endDate.setDate(today.getDate() + 7);
    document.getElementById("end_date").value = endDate.toISOString().substr(0, 10);
    
    // Clear other fields
    document.getElementById("task_name").value = "";
    document.getElementById("description").value = "";
    document.getElementById("task_status").value = "pending";
    
    // Show modal
    document.getElementById("addTaskModal").style.display = "block";
}

function closeAddTaskModal() {
    document.getElementById("addTaskModal").style.display = "none";
}

function closeEditModal() {
    document.getElementById("editModal").style.display = "none";
}

// Close modals when clicking outside
window.onclick = function(event) {
    const addModal = document.getElementById("addTaskModal");
    const editModal = document.getElementById("editModal");
    
    if (event.target === addModal) {
        closeAddTaskModal();
    } else if (event.target === editModal) {
        closeEditModal();
    }
};